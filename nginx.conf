# Nginx configuration for DeepSeek OCR Server
# Place this file in /etc/nginx/sites-available/deepseek-ocr
# Then create symlink: ln -s /etc/nginx/sites-available/deepseek-ocr /etc/nginx/sites-enabled/

upstream deepseek_ocr {
    server 127.0.0.1:8000;
}

server {
    listen 80;
    server_name your-domain.com;  # Change this to your domain

    # Max upload size (100MB)
    client_max_body_size 100M;

    # Timeouts for long-running requests
    proxy_connect_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;
    send_timeout 600s;

    # Logging
    access_log /var/log/nginx/deepseek-ocr-access.log;
    error_log /var/log/nginx/deepseek-ocr-error.log;

    location / {
        proxy_pass http://deepseek_ocr;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (if needed)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Health check endpoint
    location /health {
        proxy_pass http://deepseek_ocr/health;
        access_log off;
    }
}

# HTTPS configuration (uncomment after getting SSL certificate)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
#
#     ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#
#     client_max_body_size 100M;
#
#     location / {
#         proxy_pass http://deepseek_ocr;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }
#
# # Redirect HTTP to HTTPS
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
